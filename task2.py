import math


def calculate_max_components(m: int, n: int) -> int:
    """Вычисляет максимальное количество компонент связности."""
    return m - math.ceil(math.sqrt(2 * n + 0.25) + 0.5) + 1


def solve(m: int, n: int) -> str:
    """Генерирует текстовое решение задачи в формате LaTeX."""
    solution = []

    # Формулировка задачи
    solution.append(
        fr"Определить а) максимальное; б) минимальное количество компонент связности "
        fr"в графе, состоящем из {m} вершин и {n} рёбер.\\"
    )

    solution.append(r"\textbf{Решение.}")

    max_comp = calculate_max_components(m, n)
    v_prime = -1 * max_comp + m + 1
    solution.append(
        r"а) Решим вспомогательную задачу:\\"
        r"\textit{Пусть даны два множества: $V$ - вершин и $S$ - компонент связности. "
        r"Требуется найти способ распределить вершины по компонентам так, чтобы при условии, "
        r"что каждая компонента является полным графом, количество рёбер в графе было максимальным.}\\"
        r"Рассмотрим произвольную конфигурацию $S = \{S_1, S_2, \ldots, S_k\}$, где $k = |S|$, "
        r"а $S_i$ - множество вершин $i$-ой компоненты связности. Для двух произвольных компонент "
        r"$S_i, S_j \in S$ количество рёбер будет равно:"
        r"$$E_i + E_j = \frac{a(a-1) + b(b-1)}{2} = \frac{a^2 - a + b^2 - b}{2}$$"
        r"где $a = |S_i|$, $b = |S_j|$. Рассмотрим альтернативную конфигурацию: пусть все вершины, кроме одной "
        r"находятся в $S_j$. Новое количество рёбер:"
        r"$$\begin{aligned}"
        r"E'_i + E'_j &= \frac{(a+b-1)(a+b-2)}{2} + 0 \\"
        r"&= \frac{a^2 + b^2 - a - b + 2ab - 2(a+b) + 2}{2} \\"
        r"&= E_i + E_j + (a-1)(b-1)"
        r"\end{aligned}$$"
        r"Разность $E'_i + E'_j - (E_i + E_j) = (a-1)(b-1) \geq 0$, причём равенство достигается "
        r"только при $a=1$ или $b=1$. Это означает, что предложенная конфигурация эффективнее исходной. "
        r"Последовательно применяя это преобразование, получим граф с одной большой компонентой связности "
        r"и остальными компонентами размера 1.\\"
        r"Для исходной задачи все компоненты также должны быть полными графами, поэтому идея из вспомогательной задачи "
        r"актуальна. Количество вершин в максимальной компоненте вычисляется по формуле:"
        r"$$|V'| = \left\lceil \sqrt{2|E| + \frac{1}{4}} + \frac{1}{2} \right\rceil$$"
        r"Тогда максимальное количество компонент связности:"
        r"$$C_{\text{max}} = |V| - |V'| + 1$$"
        fr"Для данных значений: $|V'| = {v_prime}$, следовательно $C_{{\text{{max}}}} = {max_comp}$.\\"
    )

    # Часть б) Минимальное количество компонент
    solution.append(
        r"б) Минимальное количество компонент достигается при максимальном числе рёбер "
        r"Каждое новое ребро уменьшает количество компонент на 1:"
        r"$$C_{\text{min}} = |V| - |E|$$"
        fr"Подставляя значения: $C_{{\text{{min}}}} = {m} - {n} = {m - n}$."
    )

    # Формирование ответа
    solution.append(
        fr"\\ \textbf{{Ответ.}} а) ${max_comp}$; б) ${m - n}$"
    )

    return "\n".join(solution)
